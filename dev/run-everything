#!/bin/bash

errors=0

if [[ "$DC" == '' ]];
then
    DC=dmd
fi

#DC_EXCLUSIONS='EXCLUDE_GDC|mptr|method\('
DC_EXCLUSIONS='EXCLUDE_GDC'

echo test openmethods...

if ! dub test --compiler $DC -q openmethods $*;
then
    echo "ERROR"
    errors=1
fi

echo test openmethods:tests...

if ! dub test --compiler $DC -q openmethods:tests $*;
then
    echo "ERROR"
    errors=1
fi

for dir in examples
do
    echo "$dir..."

    for target in $(ls $dir)
    do
        if [ -d $dir/$target ];
        then
            echo "========================================================================"
            echo "Running $target"
            if [ "$target" = 'dl' ];
            then
                if [[ "$DC" == 'dmd' ]];
                then
                    ./examples/dl/run
                else
                    echo SKIP $target
                fi
                continue;
            fi

            if [[ "$DC" == 'gdc' ]] && grep --quiet -P $DC_EXCLUSIONS `find $dir/$target -name '*.d'`;
            then
                echo SKIP $target
            else

                if ! dub test --compiler $DC -q openmethods:$target $*;
                then
                    echo "ERROR"
                    errors=1
                fi

                if ! grep --quiet library $dir/$target/dub.json;
                then
                    if ! dub run --compiler $DC -q openmethods:$target $*;
                    then
                        echo "ERROR"
                        errors=1
                    fi
                fi
            fi
        fi

        if [[ $target == *'.d' ]]
        then
            echo "========================================================================"
            echo "Running $target"

            if [[ "$DC" == 'gdc' ]] && grep --quiet -P $DC_EXCLUSIONS $dir/$target;
            then
                echo SKIP $target
                continue
            fi

            if ! dub run --compiler $DC --single -q $dir/$target $*;
            then
                echo "ERROR"
                errors=1
            fi
        fi
    done
done

if [ $errors -ne 0 ]
then
   echo "ERRORS!"
   exit 1
fi
